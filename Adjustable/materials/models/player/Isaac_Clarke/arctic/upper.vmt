"character"
{
	"$basetexture" 			  "models/player/Isaac_Clarke/arctic/upper_color"
	"$bumpmap" 				  "models/player/Isaac_Clarke/upper_normal"
	"$phong" 				  "1"
	"$phongboost"             "0.5"
	"$phongalbedoboost"       "3"
	"$phongexponent"          "10"
	$ambientocclusion 		  1
	"$phongexponenttexture"   "models/player/Isaac_Clarke/upper_spec"
	"$phongwarptexture"       "models/player/custom_player/shared/ctm_specwarp"
	"$fresnelrangestexture"   "models/player/custom_player/shared/ctm_fresnelwarp"
	$normalmapalphaenvmapmask 1
	$envmaptint 			  "[0.003 0.003 0.003]"
	$envmapsaturation 		  0.5
	$fresnelreflection 		  0.5
	
	"$envmap"                 "env_cubemap"
	"$envmaplightscale"       "0.2"
	"$warpindex"              "0.1"
	"$rimlightexponent"       "30"
	"$rimlightboost"          "1"
	"$rimlightalbedo"         "1"
	"$rimlighttint"           "[0.5 0.7 1]"
	"$fakerimtint"            "[0.3 0.5 0.8]"
	"$fakerimboost"           "5"
	"$shadowsaturation"       "0.2"
	"$shadowsaturationbounds" "[-0.1 0.3 0.4 0.7]"
	"$shadowcontrast"         "0.2"
	"$shadowtint"             "[0 0.5 1 0.2]"
	"$ambientreflectionboost" "0.05"
	"$model"                  "1"
	
	"$alpha" "1.0"
	"$player_distance" "0.0"
	"$hide_dist" "0.0"
	"$same_team" "0"
	"$const_1" "0.5"
	"$const_2" "1"
	"Proxies"
	{
		"ConVar"
		{
			"convar" "hide_dist" 			// For transparency distance
			"resultVar" "$hide_dist"
		}
		"PlayerTeamMatch"
		{
			"resultVar" "$same_team" 		// 0 different, 1 same team
		}
		"PlayerProximity"
		{
			"scale" "0.007" 				// Fade out/in scale. This is hard set and cannot be based off a ConVar
			"resultVar" "$player_distance" 
		}
		"Subtract"
		{
			"srcVar1" "$player_distance"
			"srcVar2" "$hide_dist" 			// Subtract from distance. This is based on scale of 1 / playerproximity (ie. 0.07 playerproximity scaling means a 1 here would account for ~143 units of distance).
			"resultVar" "$player_distance"    
		}
		"LessOrEqual"
		{
			"srcVar1" "$same_team"          // if $same_team
			"srcVar2" "$const_1"            // <= 0.5
			"resultVar" "$player_distance"  // { $player_distance =
			"LessEqualVar" "$const_2"       // 1 }
			"greaterVar" "$player_distance" // else { $player_distance = $player_distance }
		}
		"Clamp"
		{
			"min" "0"
			"max" "1.0"
			"srcVar1" "$player_distance"
			"resultVar" "$alpha"
		}
	}
}
